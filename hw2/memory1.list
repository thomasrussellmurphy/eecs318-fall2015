// Thomas Russell Murphy (trm70)
// EECS 318 Fall 2015
// Program and data for hw2, q2 testing implementation

// Data segment
// At memory location zero we have the value 32'd6
0000_0000_0000_0000_0000_0000_0000_0110


// Program segment
@100  // Starts at 12'h100

// Program for calculating two's complement of value at mem[0] and storing
// it at mem[1]

// Load value at memory 0x000 into register 0x1
// LD _ no CC or src/dest _ (3) source zero _ (3) destination zero
0001_0000_0000_0000_0000_0000_0000_0001

// Complement value at register 0x1 into register 0x2
1001_0000_0000_0000_0001_0000_0000_0010

// Add immediate value of 1 to value in register 0x2
0101_1000_0000_0000_0001_0000_0000_0010

// This completes the usual complement-and-add-one inversion

// Store value at register 0x2 into memory 0x001
// STR _ no CC or src/dest _ (3) address 0x2 _ (3) address 0x001
0010_0000_0000_0000_0010_0000_0000_0001

// Halt
1000_0000_0000_0000_0000_0000_0000_0000
